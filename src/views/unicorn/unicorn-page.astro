---
import ProfileSection from "./components/profile-section.astro";
import { SubHeader } from "../../components/subheader/subheader";
import { PostCardGrid } from "components/post-card/post-card-grid";
import { UnicornInfo, PostInfo } from "types/index";
import { Button } from "../../components";
import styles from "./unicorn-page.module.scss";
import { buildSearchQuery } from "../search/search";
import * as api from "utils/api";
import { isDefined } from "utils/is-defined";

interface UnicornPageProps {
	unicorn: UnicornInfo;
	posts: PostInfo[];
}

const { unicorn, posts } = Astro.props as UnicornPageProps;

const postsToDisplay = posts.slice(0, 4);
const numberOfAchievementsToShowAtStart = posts.length ? 3 : 6;
const showPostsToggle = posts.length > postsToDisplay.length;

const postAuthors = new Map(
	[...new Set(posts.flatMap((p) => p.authors))]
		.map((id) => api.getPersonById(id))
		.filter(isDefined)
		.map((u) => [u.id, u]),
);
---

<div class={styles.container}>
	<ProfileSection unicorn={unicorn} />
	<section class={styles.contentContainer}>
		{
			postsToDisplay.length
				? [
						<SubHeader
							tag="h2"
							text="Recent articles"
							id="recent-articles-header"
						>
							{showPostsToggle && (
								<Button
									tag="a"
									href={`/search?${buildSearchQuery({
										searchQuery: "*",
										filterAuthors: [unicorn.id],
									})}`}
									aria-labelledby="recent-articles-header"
								>
									{"action.view_all"}
								</Button>
							)}
						</SubHeader>,
						<PostCardGrid
							aria-labelledby={"recent-articles-header"}
							postsToDisplay={postsToDisplay}
							postAuthors={postAuthors}
							postHeadingTag="h3"
						/>,
					]
				: undefined
		}
	</section>
</div>
