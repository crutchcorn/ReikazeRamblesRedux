---
import PostTitleHeader from "./post-title-header/post-title-header.astro";
import TableOfContents from "./table-of-contents/table-of-contents.astro";
import BlogPostLayout from "./blog-post-layout/blog-post-layout.astro";
import HeadingLinkScript from "../base/scripts/heading-link-script.astro";
import { Icon } from "astro-icon/components";

import type { MarkdownInstance } from "astro";
import {
	CollectionInfo,
	LicenseInfo,
	PostInfo,
	PostHeadingInfo,
	UnicornInfo,
} from "types/index";

import { siteMetadata } from "constants/site-config";
import "../../styles/shiki.scss";
import "../../styles/markdown/tabs.scss";
import "../../styles/markdown/in-content-ads.scss";
import SeriesToC from "./series/series-toc.astro";
import { ArticleNav } from "./article-nav/article-nav";
import RelatedPosts from "components/related-posts/related-posts.astro";
import { LargeButton } from "../../components/button/button";

import styles from "./blog-post.module.scss";

export interface Props {
	post: PostInfo;
	postHeadings: PostHeadingInfo[];
	authors: UnicornInfo[];
	collection?: CollectionInfo;
	collectionPosts?: PostInfo[];
	license?: LicenseInfo;
	postHtml: string;
}

const {
	postHtml,
	post,
	postHeadings,
	authors,
	collection,
	collectionPosts,
	license,
} = Astro.props;

const GHLink = `https://github.com/${siteMetadata.repoPath}/tree/main/content/${post.path}/index.md`;
---

<script>
	import mediumZoom from "medium-zoom";

	mediumZoom(".post-body img:not([data-nozoom])");
</script>
<script>
	import { enableTabs } from "../../utils/markdown/components/tabs/tabs-script";
	enableTabs();
</script>
<script>
	import { enableShikiTabindex } from "../../utils/markdown/shiki/shiki-tabindex-script";
	enableShikiTabindex();
</script>
<script>
	import { enableStickyObserver } from "../../utils/sticky-observer-script";
	enableStickyObserver();
</script>
<script>
	import { iFrameClickToRun } from "../../utils/markdown/iframes/iframe-script";
	iFrameClickToRun();
</script>
<HeadingLinkScript />

<main>
	<BlogPostLayout hideLeftSidebar={!postHeadings.length}>
		<PostTitleHeader slot="header" post={post} authors={authors}>
			{
				post.collection ? (
					<SeriesToC
						post={post}
						postSeries={collectionPosts}
						collection={collection}
					/>
				) : null
			}
		</PostTitleHeader>
		{
			postHeadings?.length ? (
				<TableOfContents slot="left" headingsWithId={postHeadings} />
			) : null
		}
		<section
			class="post-body"
			data-testid="post-body-div"
			aria-labelledby="blog-post-contents"
		>
			<h2 id="blog-post-contents" class="visually-hidden" data-no-heading-link>
				Post contents
			</h2>
			<div set:html={postHtml} />
			{
				collectionPosts?.length ? (
					<ArticleNav
						post={post}
						collection={collection}
						collectionPosts={collectionPosts}
					/>
				) : null
			}
		</section>
		<aside slot="right" aria-labelledby="related-posts-heading">
			<RelatedPosts post={post} headingId="related-posts-heading" />
		</aside>
	</BlogPostLayout>
</main>
