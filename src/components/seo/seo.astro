---
import { siteMetadata, siteUrl } from "constants/site-config";
import Analytics from "./analytics.astro";
import Article from "./article.astro";
import Book from "./book.astro";
import OpenGraph from "./open-graph.astro";
import Profile from "./profile.astro";
import { SEOProps } from "./shared";
import Twitter from "./twitter.astro";

const {
	description = "",
	title,
	keywords,
	canonical,
	type,
	unicornsData,
	publishedTime,
	editedTime,
	isbn,
	shareImage,
	noindex,
} = Astro.props as SEOProps;
const pathName = Astro.url.pathname;
const metaDescription = description || siteMetadata.description;
const metaKeywords = keywords ? keywords.join(",") : siteMetadata.keywords;
const metaImage = `${siteUrl}${shareImage ?? "/share-banner.png"}`;

const ogType = type ?? "blog";

const socialUnicorn = unicornsData?.find((uni) => uni.socials);
const uniTwitter =
	socialUnicorn && socialUnicorn.socials && socialUnicorn.socials.twitter;

const removeTrailingSlash = (str: string) =>
	str.endsWith("/") ? str.slice(0, -1) : str;

const currentPath = removeTrailingSlash(
	siteMetadata.siteUrl + (pathName || ""),
);
---

<title>
	{title ? `${title} | ${siteMetadata.title}` : siteMetadata.title}
</title>
<>
	{
		canonical ? (
			<link rel="canonical" href={canonical} />
		) : (
			<link rel="canonical" href={currentPath} />
		)
	}
</>
<meta property="name" content={siteMetadata.title} />
<meta name="description" content={metaDescription} />
<meta property="keywords" content={metaKeywords} />
<link
	rel="preload"
	href="/fonts/Figtree/Figtree-VariableFont_wght.ttf"
	as="font"
	type="font/ttf"
	crossorigin
/>

{
	// If the page is non-indexed, exclude it from any search results with the "robots" tag
	// https://developers.google.com/search/docs/crawling-indexing/block-indexing
	noindex ? <meta name="robots" content="noindex, nofollow" /> : null
}

<Analytics />
<Twitter
	title={title}
	metaDescription={metaDescription}
	siteMetadata={siteMetadata}
	metaImage={metaImage}
	unicornsData={unicornsData}
	uniTwitter={uniTwitter}
	type={type}
/>
<OpenGraph
	currentPath={currentPath}
	siteMetadata={siteMetadata}
	title={title}
	metaDescription={metaDescription}
	metaImage={metaImage}
	ogType={ogType}
/>
<link
	rel="alternate"
	href={`${siteUrl}/atom.xml`}
	type="application/atom+xml"
	title={`${siteMetadata.title} | Atom Feed`}
/>
<link
	rel="alternate"
	href={`${siteUrl}/rss.xml`}
	type="application/rss+xml"
	title={`${siteMetadata.title} | RSS Feed`}
/>
<link
	rel="alternate"
	href={`${siteUrl}/feed.json`}
	type="application/json"
	title={`${siteMetadata.title} | JSON Feed`}
/>
<>
	{
		type === "article" && (
			<Article
				keywords={keywords}
				editedTime={editedTime}
				publishedTime={publishedTime}
				unicornsData={unicornsData}
			/>
		)
	}
</>
<>
	{
		type === "book" && (
			<Book
				publishedTime={publishedTime}
				unicornsData={unicornsData}
				isbn={isbn}
			/>
		)
	}
</>
<>
	{type === "profile" && <Profile unicornsData={unicornsData} />}
</>
<slot />
